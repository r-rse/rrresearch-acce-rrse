{
  "hash": "3465d6114e85cabebc988fd74931c486",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"`R/geolocate.R`\"\n---\n\n\nThe `R/geolocate.R` script contains the code for the `get_stem_location` function we've created.\n\nYour script should contain:\n\n\n::: {.cell filename='R/geolocate.R'}\n\n```{.r .cell-code}\n#' Calculate the location of a stem based on azimuth and distance\n#'\n#' @param decimalLongitude numeric vector of decimal longitudes\n#' @param decimalLatitude numeric vector of decimal latitudes\n#' @param stemAzimuth numeric vector of stem azimuths\n#' @param stemDistance numeric vector of stem distances\n#'\n#' @return A pair of coordinates\nget_stem_location <- function(decimalLongitude, decimalLatitude,\n                              stemAzimuth, stemDistance) {\n  # check inputs are correct type (numeric)\n  checkmate::assert_numeric(decimalLatitude)\n  checkmate::assert_numeric(decimalLongitude)\n  checkmate::assert_numeric(stemAzimuth)\n  checkmate::assert_numeric(stemDistance)\n\n\n  out <- geosphere::destPoint(p = cbind(decimalLongitude, decimalLatitude),\n                              b = stemAzimuth, d = stemDistance) %>%\n    tibble::as_tibble()\n\n  # check output for NAs\n  checkmate::assert_false(any(is.na(out)))\n\n  return(out)\n}\n```\n:::\n",
    "supporting": [
      "APPENDIX_geolocate_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}