{
  "hash": "fb9067b3041ec7aecb151e4504d18939",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Metadata Outro\" \nauthor: \"Dr Anna Krystallli\" \nsubtitle: \"Reproducible Research Data and Project Management in R\" \ninstitute: R-RSE \nmaterials_url: https://acce-rrresearch.netlify.app/ \nformat:\n  revealjs: \n    logo: assets/logo/r-rse-logo2.png\n    theme: [default, assets/css/styles.scss, assets/css/reveal.scss]\n    footer: \"[{{< fa home >}}](index.qmd)\"\n    from: markdown+emoji\n    template-partials:\n      - assets/layouts/title-slide.html\neditor: visual \npreload-iframes: true\nlightbox: true\nexecute:\n  echo: true\n  message: false\n---\n\n\n\n\n## Additional metadata tips\n\n- ### The approach we went for is very general / minimal\n\n. . . \n\n- #### You can **make your datasets more discoverable** by developing **richer/more domain specific metadata** files. \n\n. . . \n\n- eg. create [Ecological Metadata Language (EML)](https://knb.ecoinformatics.org/#external//emlparser/docs/index.html) metadata using r pkg [`EML`](https://github.com/ropensci/EML). \n\n. . . \n\n- reposit your data at [KNB](https://knb.ecoinformatics.org/#data)\n\n. . . \n\n- allows richer [search and presentation of metadata](https://knb.ecoinformatics.org/#view/IC.13.1)\n    \n\n## Example portal: KNB data portal\n\n### Powerful search\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](assets/knb.png){width=60%}\n:::\n:::\n\n\n\n## KNB data portal\n\n### Rich interactive metadata\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](assets/knb_attributes.png){width=60%}\n:::\n:::\n\n\n\n## Parting words\n\n. . . \n\n- #### Any metadata documentation is better than none :+1:\n\n. . . \n\n- #### Start small and build up to more complex standards :100:\n\n. . . \n\n- #### But make sure to cover bare minimum :warning:\n\n. . . \n\n- #### Reach out for help from your local librarians or try the [rOpenSci discussion board](https://discuss.ropensci.org/) :raising_hand_woman:\n\n\n\n\n# Get back [{{< fa home >}}](index.qmd)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}